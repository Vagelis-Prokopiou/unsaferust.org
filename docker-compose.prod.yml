version: "3.9"

services:
  redis:
    image: redis:7-alpine
    restart: ${RESTART_POLICY:-unless-stopped}

  database:
    # The bullseye creates correct sorting compared to alpine.
    image: postgres:14-bullseye
    ports:
      - ${DB_PORT:-5432}:${DB_PORT:-5432}
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    restart: ${RESTART_POLICY:-unless-stopped}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      - redis

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.prod
    ports:
      - ${SERVER_PORT:-3001}:${SERVER_PORT:-3001}
    volumes:
      # This is for development
      - /tmp/rust_projects:/tmp/rust_projects

      # This is needed for live projects updates
      - ./server/data:/app/data
    env_file:
      - .env
    restart: ${RESTART_POLICY:-unless-stopped}
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - DB_HOST=database
      - DB_NAME=${DB_NAME}
      - REDIS_HOST=redis
    depends_on:
      database:
        condition: service_healthy

  client:
    volumes:
      - ./etc/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    build:
      context: ./client
      dockerfile: Dockerfile.prod
      args:
        - VITE_SERVER_URL=https://unsaferust.org/api/v1
    ports:
      - ${CLIENT_PORT:-3000}:80
    env_file:
      - .env
    restart: ${RESTART_POLICY:-unless-stopped}
    depends_on:
      - server

volumes:
  pgdata:
